[[{"l":"Welcome to the 256ART docs","p":["This documentations consists of two sections:","Artist Documentation: if you want to understand the benefits of releasing on 256ART and how to release, this is the place for you.","Learn More: if you want to learn more about the benefits of 256ART as a collector and gain a deeper understanding behind the key concepts of the platform, this is the place for you."]}],[{"l":"Artist Documentation","p":["If you want to learn more about the benefits of releasing on 256ART and how to release, you came to the right place."]}],[{"l":"Why Choose 256ART"},{"l":"Fully in-chain","p":["Your art is stored and constructed entirely in-chain, with no off-chain dependencies, ensuring that it will exist as long as the Ethereum blockchain does. Multiple JavaScript libraries are also available on-chain (most notably p5js and threejs)."]},{"l":"Artist empowerment","p":["We are an an open platform, allowing any artist to release their work. We want to empower artists to freely create and share their work on the Ethereum blockchain, with as few hurdles as possible."]},{"l":"Cost efficient on-chain storage","p":["We utilize gzip compression on your art script before putting it on-chain, significantly reducing the size and the cost of storing it on-chain. On average it's three times cheaper to store on-chain compared to a none gzipped version. When rendering your art from chain the DecompressionStream web API is used to gunzip your art script after which it's injected it into the HTML. This is currently supported by all modern browsers except for Firefox (and they have it on their roadmap)."]},{"l":"Fully automated testing","p":["We offer fully automated, one-button-click, testing. Eliminating the hassle of deploying to an Ethereum testnet and dealing with the associated complexities / nuisances. Behind the scenes we spin up an Ethereum node on our back-end and run all of the tests (deploying, minting, building your art, etc.) on that node, so it emulates near exactly how it would be on the Ethereum mainnet."]},{"l":"Low fees","p":["7.5% on primary sales and 7.5% of the royalty percentage you choose on secondary sales (e.g.: if you set your secondary royalty to 10%, 256ART would get 0.75%)."]},{"l":"Two seeding mechanisms","p":["Random seed generated at mint or collector selected seed at mint."]},{"l":"Three sales mechanisms","p":["Fair Dutch Auction, Fixed Price or Open Edition."]},{"l":"Ownership over your smart contracts","p":["Most of the contract is immutable and you are the owner of the contract. From the contract you can:","Artist Mint: mint tokens to yourself or friends for free (only when no dutch auction is in progress).","Withdraw Funds: withdraw your funds from the contract.","Withdraw from Royalty Splitter: withdraw your share of the royalties.","Update Image Base URL: update the image base URL for your project, allowing you to host the preview images of your art yourself or use alternatives like IPFS.","Update Maximum Token Supply: update the maximum number of tokens that can be minted for your project, mainly to cap the supply at a lower amount if a series doesn't mint out.","Update Art Scripts: update the art scripts associated with your project, mainly to improve preservation, allowing you to make changes to your art script as browser technology evolves.","Update Library Scripts: update the library scripts used in your projects, mainly to improve preservation, ensuring compatibility with any changes made to underlying libraries or browser technology."]}],[{"l":"Getting Started"},{"l":"Logging in and creating an artist account","p":["To log in and create an artist account on 256ART, follow these steps:","Visit the 256ART website and navigate to the Artist Portal.","You will be prompted to sign a message with your Ethereum wallet.","Once logged in, you will be able to update your artist details and create new projects."]},{"i":"updating-artist-details-profile-picture-artist-name-bio-etc","l":"Updating artist details (profile picture, artist name, bio, etc.)","p":["After logging in you can update various details about yourself as an artist. These details help provide a comprehensive overview of who you are as an artist to collectors.","Profile picture: Upload an image that represents you as an artist. This image will be visible to others who view your profile.= Full artist name: Provide your full artist name, which will be displayed on your profile and alongside your work.","Twitter handle: Include your Twitter handle to help others connect with you and follow your updates on the platform.","Instagram handle: Share your Instagram handle to showcase your visual artistry and engage with your audience.","Website: Add the URL of your website, where visitors can learn more about your art and your creative journey.","Short intro to you as an artist: Write a brief introduction (maximum 1500 characters) about yourself, your art, and your motivations for joining 256ART. This section is crucial, as it provides potential collaborators and buyers with insight into who you are as an artist.","Detailed story behind you as an artist: Share a more in-depth story (maximum 15000 characters) about your background, artistic development, and the experiences that have shaped your work.","Images to accompany your story: Add up to 10 images (maximum 2 MB each) that visually represent your story. When you upload new images, they will replace any previously uploaded images. These images will help bring your story to life and provide context for your artwork. By completing and updating these fields, you create an artist profile that showcases your unique artistic identity, making it easier for others to connect with you and appreciate your work."]}],[{"l":"Generative Art Template","p":["When creating a generative art project that you want to release on 256ART it’s recommended to use the below template as a starting point. With 256ART we simplify the development process compared to other platforms by requiring only one artwork.js file (for rendering your art) and a simple traits.json file for defining traits. Our template also emulates everything exactly the same ways as it would be if deployed live on the Ethereum mainnet."]},{"l":"GitHub Repository","p":["https://github.com/Martibis/256ART-generative-art-template"]},{"l":"Using the template project","p":["Clone or download the 256ART Generative Art Template repository to begin. This template provides a starting point for creating generative art that can be released fully in-chain via 256ART. The main files you will be working with are:","artwork.js or artwork-p5.js: Contains the code for generating your generative art.","traits.json: Defines the traits that should be stored on-chain.","Follow the instructions in the readme.md file to get started."]},{"l":"Customizing the template","p":["Modify the artwork.js/ artwork-p5.js file to implement your desired artwork. Make sure the output is dimension agnostic, meaning it scales seamlessly to any dimension. Define a default dimension and create a multiplier to scale coordinates or sizes relative to the canvas dimensions.","Modify the traits.json file for the traits for your generative artwork. Keep in mind that traits.json is only for the traits you would like to store on the Ethereum blockchain. These traits cannot depend on the values of other traits.","Access the traits defined in traits.json from artwork.js/ artwork-p5.js using the inputData object. For example, if you defined a trait for color in traits.json, you could access this trait in your code like this:"]},{"l":"Available libraries","p":["Only use libraries available on EthFS, as the libraries need to be available on chain. To use one of the available libraries during development, add a CDN to the library in the index.html file. We recommend using as few libraries as possible (getting large libraries from chain can significantly slow down getting your art from chain). Some of the libraries available on EthFS at the time of writing are:","p5js v1.5.0","Tone.js (version unknown)","threejs v0.147.0"]}],[{"l":"Project Details Form"},{"i":"project-name","l":"Project name*","p":["The name of your project, it should be unique and descriptive."]},{"i":"short-description-for-the-project","l":"Short description for the project*","p":["A short description of your project. This description is stored on-chain, so it is recommended to keep it brief to reduce costs. The maximum character limit for this field is 1500 characters."]},{"i":"reserve-price","l":"Reserve price*","p":["The reserve price or minimum price for your project. In the case of open-edition and fixed-price sales mechanisms, the price is the same as the reserve price. For Dutch Auction, the reserve price is used in the currentPrice() function in the smart contract to calculate the current price of the project during the auction, ensuring that you don’t have to worry about halftime or other complexities. The starting mint price is roughly 25 times higher than the reserve price and lowers every 7.5 minutes (divided by roughly 1.5x each time) over a one hour duration."]},{"i":"sales-mechanism","l":"Sales mechanism*","p":["The sales mechanism for your project. There are three options: Fair Dutch Auction, Fixed Price, and Open Edition."]},{"i":"seeding-mechanism","l":"Seeding mechanism*","p":["The seeding mechanism for your project. There are two options: Random at Time of Mint and Collector Chooses Seed."]},{"i":"collection-size","l":"Collection size*","p":["The total number of NFTs in the collection. Only applicable when the sales mechanism is not Open Edition."]},{"l":"Allow list addresses","p":["The addresses you wish to add to your allow list. Allow-listed addresses will be able to mint before the public mint opens at the reserve price. There is a limit of one mint per wallet."]},{"i":"artworkjs","l":"Artwork.js*","p":["The JavaScript code that generates the artwork. Generative Art Template for more info."]},{"i":"traitsjson","l":"Traits.json*","p":["The Traits.json file that contains the metadata for your artwork. This should be formatted in valid JSON format and should not exceed 20kb in size. Generative Art Template for more info."]},{"i":"project-libraries","l":"Project libraries*","p":["The external libraries used in your project. Multiple libraries can be selected from the provided list, but we recommend using as few as possible (getting large libraries from chain can significantly slow down getting your art from chain)."]},{"i":"license","l":"License*","p":["The license for your project. Selecting an appropriate license helps clarify how the artwork can be used and shared by others."]},{"i":"ethereum-address","l":"Ethereum Address*","p":["The Ethereum address that will be the owner of the contract and will receive ETH from primary and secondary sales. A cold wallet is recommended for this purpose."]},{"i":"secondary-royalty-percentage","l":"Secondary royalty percentage*","p":["The secondary royalty percentage that you will receive from secondary sales of your work. Please note that some marketplaces might not honor this, we recommend only linking to marketplaces that do."]},{"l":"Tags","p":["Relevant tags for your project. These tags will help collectors find your project more easily when searching and provide them with quick information on what to expect."]},{"l":"Detailed story behind your project","p":["The detailed story behind your project. This is an opportunity for you to provide more context about your artwork, its inspiration, and any other relevant information that would help potential collectors and viewers understand and appreciate the project more deeply."]}],[{"l":"Testing Your Project"},{"l":"Testing for release","p":["Before you release your project, it has to be tested, this is to ensure that everything works as intended before deploying to the Ethereum mainnet. We have built a testing feature that simplifies this process, allowing you to run tests on an emulation of the Ethereum network without incurring gas fees. This section will guide you through the testing process, explains how it works behind the scenes and will go into the benefits of using it."]},{"i":"how-does-it-work-behind-the-scenes","l":"How does it work behind the scenes?","p":["We use Hardhat, an Ethereum development environment, to run tests on top of an archival node on our back-end. This approach enables us to simulate how your project would function on the Ethereum mainnet without paying gas fees. As a result, we can perform tests at no cost while still simulating the actual network conditions."]},{"l":"Initiating the test","p":["To initiate the testing process, go to the artist portal and click on one of your unreleased projects. Make sure the project details form is filled out Project Details Form. Once you have completed the form, navigate to \"Test Project\" and click the \"Test Project\" button. This will start the test, and show the testing terminal that displays the test progress, results, and any errors that may occur."]},{"l":"Understanding the testing process","p":["The following is tested:","Deployment of your project's smart contract.","Minting of one artwork.","Retrieving the tokenURI for the minted artwork.","Displaying the metadata, live view, and image previews of the minted artwork."]},{"l":"Monitoring the test progress","p":["As the test progresses, you will receive real-time updates through the testing interface. The interface will display terminal messages, success messages, error messages, and other relevant information as the test proceeds. Keep an eye on these messages to monitor the progress and identify any issues that may arise."]},{"l":"Reviewing the test results","p":["Once the test is complete, you can review the results to ensure that the metadata and visual elements of the minted artwork are correct and match your expectations. If the test identifies any issues, you can address them before releasing your project. If the test is successful and you are satisfied with the results, you can proceed to release your project by clicking the \"I declare results are as expected\" button."]},{"l":"Benefits of using our testing feature","p":["By using our built-in testing feature, you can:","Test your project in a real-world environment without incurring gas fees.","Easily identify potential issues or improvements.","Obtain accurate cost estimates for deploying the project","Verify that the metadata, live view, and image previews of a minted artwork are correct."]}],[{"l":"Releasing Your Project","p":["Releasing your project is the final step before going live with your project. It involves deploying your smart contracts and setting up the details for your project launch."]},{"l":"Project Verification and Acceptance of Terms","p":["In the release step, you will see a brief overview of your project. To proceed, two checkboxes need to be marked in order to release:","Information Verification: Review the project information displayed and ensure it's accurate. If everything is as it should be, check this box to confirm that your project information is correct.","Terms of Service Acceptance: Read and understand our terms of service. If you agree to them, check this box to accept."]},{"l":"Deploying Your Smart Contracts","p":["The next step is to deploy your smart contracts. Depending on the size of your ArtScript, there could be one or more smart contracts for it:","Art Info Contract: This contract holds crucial information about your project, such as your name, the license of your work, and a brief description of your project.","ArtScript Contract(s): These contracts contain your ArtScript. To significantly reduce the cost of deployment, we gzip and base64 encode your ArtScript before deploying it on the blockchain. During the live view from the chain, we gunzip the ArtScript and inject it into the HTML page. Due to a size limit of 24KB of bytecode per smart contract, your ArtScript may be split across multiple contracts.","Royalty Splitter Contract: This contract ensures that you receive your fair share from secondary sales royalties."]},{"l":"Selecting Your Release Dates","p":["With these smart contracts successfully deployed, the next step is setting up your release dates.","Release Date: This is the date your project will be publicly available for minting.","Allow List Date: If you've created an allow list of addresses that can mint your project before the general public, you'll need to specify the date this list will take effect. Remember, the allow list mint closes as soon as the public mint begins.","End Date: If your project is an open edition, you can also set an end date.","Once you've confirmed these dates, you can click on 'Release Project'. If all goes as planned, your final ERC721 contract will be deployed, marking the official launch of your project. You will then be redirected to your project page. Keep in mind we only show projects that are within a week of release to prevent spam."]},{"l":"Post-Release","p":["After releasing your project, there are several post-release functions that you can perform. These include:","Click 'Write'. This will trigger a transaction request in your wallet.","Click on the 'Connect to Web3' button.","Confirm the transaction to withdraw the funds to your wallet.","Connect your wallet (the one set as the owner of the contract) to Etherscan.","Currently, all of these actions are performed directly through the smart contracts themselves. We're working on integrating this functionality into our front-end to make it more accessible. For the time being, we'll provide guidance on withdrawing funds from contracts.","Go to the 'Write Contract' tab.","Navigate to your contract on Etherscan.","Note: If you're unfamiliar with interacting with smart contracts or have any questions, please contact a member of the 256ART team via our Discord channel.","Once connected, find the 'withdraw' function in the list of functions.","Please reach out to our team via Discord if you need any assistance with this process. We're here to help!","To withdraw funds from the main contract or the royalty splitter contract, you will need to interact directly with the smart contract on Etherscan. Here's a step-by-step guide:","Updating ArtScripts and libraries: Over time, certain functionalities may no longer be supported by libraries, browsers, etc. In these cases, you'll be able to update your ArtScripts and libraries to maintain compatibility.","Updating the max supply: In the event that a series doesn't mint out, you can adjust the max supply to a lower value (though it can't be less than the current token supply).","Withdrawing Funds","Withdrawing funds from the main contract: After your work is minted and sold, the funds are stored in the main contract. You can withdraw these funds.","Withdrawing funds from the royalty splitter contract: If secondary sales happen and royalties are paid, these royalties are send to the royalty splitter contract. You can withdraw these funds."]}],[{"l":"Learn More","p":["If you want to learn more about the inner workings of 256ART and get a better overview of the key features, you've come to the right place."]},{"l":"This section is still under construction"}]]